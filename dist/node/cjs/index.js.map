{"version":3,"file":"index.js","sources":["../../../node_modules/mime-db/index.js","../../../node_modules/mime-types/index.js","../../../build/MIMETextError.js","../../../build/Mailbox.js","../../../build/MIMEMessageHeader.js","../../../build/MIMEMessageContent.js","../../../build/MIMEMessage.js","../../../build/entrypoints/node.js"],"sourcesContent":["/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n","export class MIMETextError extends Error {\n    name = '';\n    description = '';\n    constructor(message, description = '') {\n        super(description);\n        this.name = message;\n        this.description = description;\n    }\n}\n","import { MIMETextError } from './MIMETextError.js';\nexport class Mailbox {\n    reSpecCompliantAddr = /(([^<>\\r\\n]+)\\s)?<[^\\r\\n]+>/;\n    name = '';\n    addr = '';\n    type = 'To';\n    constructor(input, config = { type: 'To' }) {\n        this.type = config.type;\n        this.parse(input);\n    }\n    getAddrDomain() {\n        return this.addr.includes('@') ? this.addr.split('@')[1] : '';\n    }\n    dump() {\n        return this.name ? `\"${this.name}\" <${this.addr}>` : `<${this.addr}>`;\n    }\n    parse(input) {\n        if (this.isMailboxAddrObject(input)) {\n            this.addr = input.addr;\n            if (typeof input.name === 'string')\n                this.name = input.name;\n            if (typeof input.type === 'string')\n                this.type = input.type;\n            return this;\n        }\n        if (this.isMailboxAddrText(input)) {\n            const text = input.trim();\n            if (text.slice(0, 1) == '<' && text.slice(-1) == '>') {\n                this.addr = text.slice(1, -1);\n                return this;\n            }\n            const arr = text.split(' <');\n            arr[0] = /^(\"|')/.test(arr[0]) ? arr[0].slice(1) : arr[0];\n            arr[0] = /(\"|')$/.test(arr[0]) ? arr[0].slice(0, -1) : arr[0];\n            arr[1] = arr[1].slice(0, -1);\n            this.name = arr[0];\n            this.addr = arr[1];\n            return this;\n        }\n        if (typeof input === 'string') {\n            this.addr = input;\n            return this;\n        }\n        throw new MIMETextError('MIMETEXT_INVALID_MAILBOX', 'Couldn\\'t recognize the input.');\n    }\n    isMailboxAddrText(v) {\n        return typeof v === 'string' && this.reSpecCompliantAddr.test(v);\n    }\n    isMailboxAddrObject(v) {\n        return this.isObject(v) && Object.hasOwn(v, 'addr');\n    }\n    isObject(v) {\n        return (!!v) && (v.constructor === Object);\n    }\n}\n","import { MIMETextError } from './MIMETextError.js';\nimport { Mailbox } from './Mailbox.js';\n/*\n    Headers are based on: https://www.rfc-editor.org/rfc/rfc4021#section-2.1\n    (Some are ignored as they can be added later or as a custom header.)\n*/\nexport class MIMEMessageHeader {\n    envctx;\n    fields = [\n        {\n            name: 'Date',\n            generator: () => ((new Date()).toUTCString()).replace(/GMT|UTC/gi, '+0000')\n        },\n        {\n            name: 'From',\n            required: true,\n            validate: (v) => this.validateMailboxSingle(v),\n            dump: (v) => this.dumpMailboxSingle(v)\n        },\n        {\n            name: 'Sender',\n            validate: (v) => this.validateMailboxSingle(v),\n            dump: (v) => this.dumpMailboxSingle(v)\n        },\n        {\n            name: 'Reply-To',\n            validate: (v) => this.validateMailboxSingle(v),\n            dump: (v) => this.dumpMailboxSingle(v)\n        },\n        {\n            name: 'To',\n            validate: (v) => this.validateMailboxMulti(v),\n            dump: (v) => this.dumpMailboxMulti(v)\n        },\n        {\n            name: 'Cc',\n            validate: (v) => this.validateMailboxMulti(v),\n            dump: (v) => this.dumpMailboxMulti(v)\n        },\n        {\n            name: 'Bcc',\n            validate: (v) => this.validateMailboxMulti(v),\n            dump: (v) => this.dumpMailboxMulti(v)\n        },\n        {\n            name: 'Message-ID',\n            generator: () => {\n                const randomstr = Math.random().toString(36).slice(2);\n                const from = this.fields.filter((obj) => obj.name === 'From')[0].value;\n                const domain = from.getAddrDomain();\n                return '<' + randomstr + '@' + domain + '>';\n            }\n        },\n        {\n            name: 'Subject',\n            required: true,\n            dump: (v) => {\n                return typeof v === 'string' ? '=?utf-8?B?' + this.envctx.toBase64(v) + '?=' : '';\n            }\n        },\n        {\n            name: 'MIME-Version',\n            generator: () => '1.0'\n        }\n    ];\n    constructor(envctx) {\n        this.envctx = envctx;\n    }\n    dump() {\n        let lines = '';\n        for (const field of this.fields) {\n            if (field.disabled)\n                continue;\n            const isValueDefinedByUser = field.value !== undefined && field.value !== null;\n            if (!isValueDefinedByUser && field.required) {\n                throw new MIMETextError('MIMETEXT_MISSING_HEADER', `The \"${field.name}\" header is required.`);\n            }\n            if (!isValueDefinedByUser && typeof field.generator !== 'function')\n                continue;\n            if (!isValueDefinedByUser && typeof field.generator === 'function')\n                field.value = field.generator();\n            const strval = Object.hasOwn(field, 'dump') && typeof field.dump === 'function'\n                ? field.dump(field.value)\n                : typeof field.value === 'string' ? field.value : '';\n            lines += `${field.name}: ${strval}${this.envctx.eol}`;\n        }\n        return lines.slice(0, -1 * this.envctx.eol.length);\n    }\n    toObject() {\n        return this.fields.reduce((memo, item) => {\n            memo[item.name] = item.value;\n            return memo;\n        }, {});\n    }\n    get(name) {\n        const fieldMatcher = (obj) => obj.name.toLowerCase() === name.toLowerCase();\n        const ind = this.fields.findIndex(fieldMatcher);\n        return ind !== -1 ? this.fields[ind].value : undefined;\n    }\n    set(name, value) {\n        const fieldMatcher = (obj) => obj.name.toLowerCase() === name.toLowerCase();\n        const isCustomHeader = !this.fields.some(fieldMatcher);\n        if (!isCustomHeader) {\n            const ind = this.fields.findIndex(fieldMatcher);\n            const field = this.fields[ind];\n            if (field.validate && !field.validate(value)) {\n                throw new MIMETextError('MIMETEXT_INVALID_HEADER_VALUE', 'You specified an invalid value for the header ' + name);\n            }\n            this.fields[ind].value = value;\n            return this.fields[ind];\n        }\n        return this.setCustom({\n            name: name,\n            value: value,\n            custom: true,\n            dump: (v) => typeof v === 'string' ? v : ''\n        });\n    }\n    setCustom(obj) {\n        if (this.isHeaderField(obj)) {\n            if (typeof obj.value !== 'string') {\n                throw new MIMETextError('MIMETEXT_INVALID_HEADER_FIELD', 'Custom header must have a value.');\n            }\n            this.fields.push(obj);\n            return obj;\n        }\n        throw new MIMETextError('MIMETEXT_INVALID_HEADER_FIELD', 'You specified an invalid header field object.');\n    }\n    validateMailboxSingle(v) {\n        return v instanceof Mailbox;\n    }\n    validateMailboxMulti(v) {\n        return v instanceof Mailbox || this.isArrayOfMailboxes(v);\n    }\n    dumpMailboxMulti(v) {\n        const dump = (item) => item.name.length === 0\n            ? item.dump()\n            : `=?utf-8?B?${this.envctx.toBase64(item.name)}?= <${item.addr}>`;\n        return this.isArrayOfMailboxes(v) ? v.map(dump).join(`,${this.envctx.eol} `) : v instanceof Mailbox ? dump(v) : '';\n    }\n    dumpMailboxSingle(v) {\n        const dump = (item) => item.name.length === 0\n            ? item.dump()\n            : `=?utf-8?B?${this.envctx.toBase64(item.name)}?= <${item.addr}>`;\n        return v instanceof Mailbox ? dump(v) : '';\n    }\n    isHeaderField(v) {\n        const validProps = ['name', 'value', 'dump', 'required', 'disabled', 'generator', 'custom'];\n        if (this.isObject(v)) {\n            const h = v;\n            if (Object.hasOwn(h, 'name') && typeof h.name === 'string' && h.name.length > 0) {\n                if (!Object.keys(h).some((prop) => !validProps.includes(prop))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    isObject(v) {\n        return (!!v) && (v.constructor === Object);\n    }\n    isArrayOfMailboxes(v) {\n        return this.isArray(v) && v.every((item) => item instanceof Mailbox);\n    }\n    isArray(v) {\n        return (!!v) && (v.constructor === Array);\n    }\n}\nexport class MIMEMessageContentHeader extends MIMEMessageHeader {\n    fields = [\n        {\n            name: 'Content-ID'\n        },\n        {\n            name: 'Content-Type'\n        },\n        {\n            name: 'Content-Transfer-Encoding'\n        },\n        {\n            name: 'Content-Disposition'\n        }\n    ];\n    constructor(envctx) {\n        super(envctx);\n    }\n}\n","import { MIMEMessageContentHeader } from './MIMEMessageHeader.js';\nexport class MIMEMessageContent {\n    envctx;\n    headers;\n    data;\n    constructor(envctx, data, headers = {}) {\n        this.envctx = envctx;\n        this.headers = new MIMEMessageContentHeader(this.envctx);\n        this.data = data;\n        this.setHeaders(headers);\n    }\n    dump() {\n        const eol = this.envctx.eol;\n        return this.headers.dump() + eol + eol + this.data;\n    }\n    isAttachment() {\n        const disposition = this.headers.get('Content-Disposition');\n        return typeof disposition === 'string' && disposition.includes('attachment');\n    }\n    isInlineAttachment() {\n        const disposition = this.headers.get('Content-Disposition');\n        return typeof disposition === 'string' && disposition.includes('inline');\n    }\n    setHeader(name, value) {\n        this.headers.set(name, value);\n        return name;\n    }\n    getHeader(name) {\n        return this.headers.get(name);\n    }\n    setHeaders(obj) {\n        return Object.keys(obj).map((prop) => this.setHeader(prop, obj[prop]));\n    }\n    getHeaders() {\n        return this.headers.toObject();\n    }\n}\n","import { MIMETextError } from './MIMETextError.js';\nimport { MIMEMessageHeader } from './MIMEMessageHeader.js';\nimport { Mailbox } from './Mailbox.js';\nimport { MIMEMessageContent } from './MIMEMessageContent.js';\nexport class MIMEMessage {\n    envctx;\n    headers;\n    boundaries = { mixed: '', alt: '', related: '' };\n    validTypes = ['text/html', 'text/plain'];\n    validContentTransferEncodings = ['7bit', '8bit', 'binary', 'quoted-printable', 'base64'];\n    messages = [];\n    constructor(envctx) {\n        this.envctx = envctx;\n        this.headers = new MIMEMessageHeader(this.envctx);\n        this.messages = [];\n        this.generateBoundaries();\n    }\n    asRaw() {\n        const eol = this.envctx.eol;\n        const lines = this.headers.dump();\n        const plaintext = this.getMessageByType('text/plain');\n        const html = this.getMessageByType('text/html');\n        const primaryMessage = html ? html : plaintext ? plaintext : undefined;\n        if (primaryMessage === undefined) {\n            throw new MIMETextError('MIMETEXT_MISSING_BODY', 'No content added to the message.');\n        }\n        const hasAttachments = this.hasAttachments();\n        const hasInlineAttachments = this.hasInlineAttachments();\n        const structure = hasInlineAttachments && hasAttachments ? 'mixed+related'\n            : hasAttachments ? 'mixed'\n                : hasInlineAttachments ? 'related'\n                    : plaintext && html ? 'alternative'\n                        : '';\n        if (structure === 'mixed+related') {\n            const attachments = this.getAttachments()\n                .map((a) => '--' + this.boundaries.mixed + eol + a.dump() + eol + eol)\n                .join('')\n                .slice(0, -1 * eol.length);\n            const inlineAttachments = this.getInlineAttachments()\n                .map((a) => '--' + this.boundaries.related + eol + a.dump() + eol + eol)\n                .join('')\n                .slice(0, -1 * eol.length);\n            return lines + eol\n                + 'Content-Type: multipart/mixed; boundary=' + this.boundaries.mixed + eol\n                + eol\n                + '--' + this.boundaries.mixed + eol\n                + 'Content-Type: multipart/related; boundary=' + this.boundaries.related + eol\n                + eol\n                + this.dumpTextContent(plaintext, html, this.boundaries.related) + eol\n                + eol\n                + inlineAttachments\n                + '--' + this.boundaries.related + '--' + eol\n                + attachments\n                + '--' + this.boundaries.mixed + '--';\n        }\n        else if (structure === 'mixed') {\n            const attachments = this.getAttachments()\n                .map((a) => '--' + this.boundaries.mixed + eol + a.dump() + eol + eol)\n                .join('')\n                .slice(0, -1 * eol.length);\n            return lines + eol\n                + 'Content-Type: multipart/mixed; boundary=' + this.boundaries.mixed + eol\n                + eol\n                + this.dumpTextContent(plaintext, html, this.boundaries.mixed) + eol\n                + (plaintext && html ? '' : eol)\n                + attachments\n                + '--' + this.boundaries.mixed + '--';\n        }\n        else if (structure === 'related') {\n            const inlineAttachments = this.getInlineAttachments()\n                .map((a) => '--' + this.boundaries.related + eol + a.dump() + eol + eol)\n                .join('')\n                .slice(0, -1 * eol.length);\n            return lines + eol\n                + 'Content-Type: multipart/related; boundary=' + this.boundaries.related + eol\n                + eol\n                + this.dumpTextContent(plaintext, html, this.boundaries.related) + eol\n                + eol\n                + inlineAttachments\n                + '--' + this.boundaries.related + '--';\n        }\n        else if (structure === 'alternative') {\n            return lines + eol\n                + 'Content-Type: multipart/alternative; boundary=' + this.boundaries.alt + eol\n                + eol\n                + this.dumpTextContent(plaintext, html, this.boundaries.alt) + eol\n                + eol\n                + '--' + this.boundaries.alt + '--';\n        }\n        else {\n            return lines + eol + primaryMessage.dump();\n        }\n    }\n    asEncoded() {\n        return this.envctx.toBase64WebSafe(this.asRaw());\n    }\n    dumpTextContent(plaintext, html, boundary) {\n        const eol = this.envctx.eol;\n        const primaryMessage = html ? html : plaintext;\n        let data = '';\n        if (plaintext && html && !this.hasInlineAttachments() && this.hasAttachments())\n            data = '--' + boundary + eol\n                + 'Content-Type: multipart/alternative; boundary=' + this.boundaries.alt + eol\n                + eol\n                + '--' + this.boundaries.alt + eol\n                + plaintext.dump() + eol\n                + eol\n                + '--' + this.boundaries.alt + eol\n                + html.dump() + eol\n                + eol\n                + '--' + this.boundaries.alt + '--';\n        else if (plaintext && html && this.hasInlineAttachments())\n            data = '--' + boundary + eol\n                + html.dump();\n        else if (plaintext && html)\n            data = '--' + boundary + eol\n                + plaintext.dump() + eol\n                + eol\n                + '--' + boundary + eol\n                + html.dump();\n        else\n            data = '--' + boundary + eol\n                + primaryMessage.dump();\n        return data;\n    }\n    hasInlineAttachments() {\n        return this.messages.some((msg) => msg.isInlineAttachment());\n    }\n    hasAttachments() {\n        return this.messages.some((msg) => msg.isAttachment());\n    }\n    getAttachments() {\n        const matcher = (msg) => msg.isAttachment();\n        return this.messages.some(matcher) ? this.messages.filter(matcher) : [];\n    }\n    getInlineAttachments() {\n        const matcher = (msg) => msg.isInlineAttachment();\n        return this.messages.some(matcher) ? this.messages.filter(matcher) : [];\n    }\n    getMessageByType(type) {\n        const matcher = (msg) => (msg.getHeader('Content-Type') || '').includes(type);\n        return this.messages.some(matcher) ? this.messages.filter(matcher)[0] : undefined;\n    }\n    addAttachment(opts) {\n        if (!this.isObject(opts.headers))\n            opts.headers = {};\n        if (typeof opts.filename !== 'string') {\n            throw new MIMETextError('MIMETEXT_MISSING_FILENAME', 'The property filename must exist while adding attachments.');\n        }\n        let type = opts.headers['Content-Type'] || opts.contentType || 'none';\n        if (this.envctx.validateContentType(type) === false) {\n            throw new MIMETextError('MIMETEXT_INVALID_MESSAGE_TYPE', `You specified an invalid content type \"${type}\".`);\n        }\n        const encoding = opts.headers['Content-Transfer-Encoding'] || opts.encoding || 'base64';\n        if (!this.validContentTransferEncodings.includes(encoding)) {\n            type = 'application/octet-stream';\n        }\n        const contentId = opts.headers['Content-ID'];\n        if (typeof contentId === 'string' && contentId.length > 2 && contentId.slice(0, 1) !== '<' && contentId.slice(-1) !== '>') {\n            opts.headers['Content-ID'] = '<' + opts.headers['Content-ID'] + '>';\n        }\n        const disposition = opts.inline ? 'inline' : 'attachment';\n        opts.headers = Object.assign({}, opts.headers, {\n            'Content-Type': `${type}; name=\"${opts.filename}\"`,\n            'Content-Transfer-Encoding': encoding,\n            'Content-Disposition': `${disposition}; filename=\"${opts.filename}\"`\n        });\n        return this._addMessage({ data: opts.data, headers: opts.headers });\n    }\n    addMessage(opts) {\n        if (!this.isObject(opts.headers))\n            opts.headers = {};\n        let type = opts.headers['Content-Type'] || opts.contentType || 'none';\n        if (!this.validTypes.includes(type)) {\n            throw new MIMETextError('MIMETEXT_INVALID_MESSAGE_TYPE', `Valid content types are ${this.validTypes.join(', ')} but you specified \"${type}\".`);\n        }\n        const encoding = opts.headers['Content-Transfer-Encoding'] || opts.encoding || '7bit';\n        if (!this.validContentTransferEncodings.includes(encoding)) {\n            type = 'application/octet-stream';\n        }\n        const charset = opts.charset || 'UTF-8';\n        opts.headers = Object.assign({}, opts.headers, {\n            'Content-Type': `${type}; charset=${charset}`,\n            'Content-Transfer-Encoding': encoding\n        });\n        return this._addMessage({ data: opts.data, headers: opts.headers });\n    }\n    _addMessage(opts) {\n        const msg = new MIMEMessageContent(this.envctx, opts.data, opts.headers);\n        this.messages.push(msg);\n        return msg;\n    }\n    setSender(input, config = { type: 'From' }) {\n        const mailbox = new Mailbox(input, config);\n        this.setHeader('From', mailbox);\n        return mailbox;\n    }\n    getSender() {\n        return this.getHeader('From');\n    }\n    setRecipients(input, config = { type: 'To' }) {\n        const arr = !this.isArray(input) ? [input] : input;\n        const recs = arr.map((_input) => new Mailbox(_input, config));\n        this.setHeader(config.type, recs);\n        return recs;\n    }\n    getRecipients(config = { type: 'To' }) {\n        return this.getHeader(config.type);\n    }\n    setRecipient(input) {\n        return this.setRecipients(input, { type: 'To' });\n    }\n    setTo(input) {\n        return this.setRecipients(input, { type: 'To' });\n    }\n    setCc(input) {\n        return this.setRecipients(input, { type: 'Cc' });\n    }\n    setBcc(input) {\n        return this.setRecipients(input, { type: 'Bcc' });\n    }\n    setSubject(value) {\n        this.setHeader('subject', value);\n        return value;\n    }\n    getSubject() {\n        return this.getHeader('subject');\n    }\n    setHeader(name, value) {\n        this.headers.set(name, value);\n        return name;\n    }\n    getHeader(name) {\n        return this.headers.get(name);\n    }\n    setHeaders(obj) {\n        return Object.keys(obj).map((prop) => this.setHeader(prop, obj[prop]));\n    }\n    getHeaders() {\n        return this.headers.toObject();\n    }\n    toBase64(v) {\n        return this.envctx.toBase64(v);\n    }\n    toBase64WebSafe(v) {\n        return this.envctx.toBase64WebSafe(v);\n    }\n    generateBoundaries() {\n        this.boundaries = {\n            mixed: Math.random().toString(36).slice(2),\n            alt: Math.random().toString(36).slice(2),\n            related: Math.random().toString(36).slice(2)\n        };\n    }\n    isArray(v) {\n        return (!!v) && (v.constructor === Array);\n    }\n    isObject(v) {\n        return (!!v) && (v.constructor === Object);\n    }\n}\n","import { EOL } from 'node:os';\nimport * as mime from 'mime-types';\nimport { MIMEMessage } from '../MIMEMessage.js';\nconst envctx = {\n    toBase64: function toBase64(data) {\n        return (new Buffer(data)).toString('base64');\n    },\n    toBase64WebSafe: function toBase64WebSafe(data) {\n        return (new Buffer(data)).toString('base64')\n            .replace(/\\+/g, '-')\n            .replace(/\\//g, '_')\n            .replace(/=+$/, '');\n    },\n    eol: EOL,\n    validateContentType: (v) => {\n        return mime.contentType(v);\n    }\n};\nexport function createMimeMessage() {\n    return new MIMEMessage(envctx);\n}\nexport { MIMEMessage } from '../MIMEMessage.js';\nexport { Mailbox } from '../Mailbox.js';\nexport { MIMETextError } from '../MIMETextError.js';\nexport { MIMEMessageHeader } from '../MIMEMessageHeader.js';\nexport { MIMEMessageContent } from '../MIMEMessageContent.js';\n"],"names":["require$$0","EOL","mime.contentType"],"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","x_google_ignoreList":[0,1]}